name: main

on:
  release:
    types: [published]
  #push:
  #  tags:
  #    - 'v*'

permissions:
  contents: write
  pull-requests: read

env:
  PROJECT_ID: "1192573"

jobs:
  modpack-info:
    runs-on: ubuntu-latest
    outputs:
      projectname: ${{ steps.info.outputs.projectname }}
      version: ${{ steps.info.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get modpack info
        id: info
        run: |
            manifestjson=`cat ./pakku.json`
            manifestlockjson=`cat ./pakku-lock.json`
            
            projectname=`echo $(jq -r '.name' <<< "$manifestjson")`
            echo "projectname=$projectname" >> $GITHUB_OUTPUT
            
            version=`echo $(jq -r '.mc_versions[0]' <<< "$manifestlockjson")`
            echo "version=$version" >> $GITHUB_OUTPUT
      - name: Get tag
        id: version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

  changelog:
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Store changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: CHANGELOG.md

  build:
    runs-on: ubuntu-latest
    needs: [changelog, modpack-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Pakku
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: juraj-hrivnak/Pakku
          file: "pakku.jar"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download changelog
        uses: actions/download-artifact@v4
        with:
          name: changelog
      - name: Fetch modpack
        run: java -jar pakku.jar fetch
      - name: Export modpack
        run: java -jar pakku.jar export
      - name: Rename curseforge pack zip
        run: |
          mv "./build/curseforge/${{ needs.modpack-info.outputs.projectname }}.zip" "build/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip"
      - name: Rename server pack zip
        run: |
          mv "./build/serverpack/${{ needs.modpack-info.outputs.projectname }}.zip" "build/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}-server.zip"
      - name: Upload Curseforge Zip
        uses: actions/upload-artifact@v4 
        with:
          name: modpack
          path: "./build/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip"
      - name: Upload Server Pack zip
        uses: actions/upload-artifact@v4
        with:
          name: server-modpack
          path: "./build/${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}-server.zip"
  
  release-curseforge:
    runs-on: ubuntu-latest
    needs: [build, changelog, modpack-info]
    steps:
      - name: Download modpack
        uses: actions/download-artifact@v4
        with:
          name: modpack
      - name: Get release type
        id: release-type
        run: |
          rel_type="release"
          case "${{ needs.modpack-info.outputs.tag }}" in
            *alpha*) rel_type="alpha" ;;
            *beta*) rel_type="beta" ;;
            *) rel_type="release" ;;
          esac
          echo "type=$rel_type" >> $GITHUB_OUTPUT
      - name: Create release
        uses: itsmeow/curseforge-upload@v3
        with:
          token: ${{ secrets.CF_API_TOKEN }}
          project_id: ${{ env.PROJECT_ID }}
          game_endpoint: minecraft
          file_path: ${{ needs.modpack-info.outputs.projectname }}-${{ needs.modpack-info.outputs.tag }}.zip
          changelog: "${{ needs.changelog.outputs.changelog }}"
          game_versions: "Minecraft 1.20:${{ needs.modpack-info.outputs.version }},Forge" 
          release_type: ${{ steps.release-type.outputs.type }}
